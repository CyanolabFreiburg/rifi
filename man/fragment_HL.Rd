% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fragment_HL.r
\name{fragment_HL}
\alias{fragment_HL}
\title{fragment_HL: performs the half_life fragmentation
fragment_HL makes HL_fragments based on delay_fragments and assigns all
gathered information to the SummarizedExperiment object.
The columns "HL_fragment" and "HL_mean_fragment" are added.
fragment_HL makes half-life_fragments and assigns the mean of each fragment.
The function used is:
.score_fun_ave.
The input the SummarizedExperiment object.
pen is the penalty for new fragments in the dynamic programming, pen_out is
the outlier penalty.}
\usage{
fragment_HL(inp, cores = 1, pen, pen_out)
}
\arguments{
\item{inp}{SummarizedExperiment: the input data frame with correct format.}

\item{cores}{integer: the number of assigned cores for the task.}

\item{pen}{numeric: an internal parameter for the dynamic programming.
Higher values result in fewer fragments. Default is the auto generated value.}

\item{pen_out}{numeric: an internal parameter for the dynamic programming.
Higher values result in fewer allowed outliers. Default is the auto
generated value.}
}
\value{
the SummarizedExperiment object: with HL_fragment and
HL_mean_fragment added to the rowRanges.
}
\description{
fragment_HL: performs the half_life fragmentation
fragment_HL makes HL_fragments based on delay_fragments and assigns all
gathered information to the SummarizedExperiment object.
The columns "HL_fragment" and "HL_mean_fragment" are added.
fragment_HL makes half-life_fragments and assigns the mean of each fragment.
The function used is:
.score_fun_ave.
The input the SummarizedExperiment object.
pen is the penalty for new fragments in the dynamic programming, pen_out is
the outlier penalty.
}
\examples{
data(fragmentation_minimal)
fragment_HL(inp = fragmentation_minimal, cores = 2, pen = 2, pen_out = 1)

}
