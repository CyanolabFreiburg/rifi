% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fragment_TI.r
\name{fragment_TI}
\alias{fragment_TI}
\title{fragment_TI: performs the TI fragmentation.
fragment_TI makes TI_fragments based on TUs and assigns all gathered
information to the probe based data frame.
The columns "TI_termination_fragment" and the TI_mean_termination_factor
are added.
The function used is:
.score_fun_ave.
The input is the probe, a dataframe with ID, TI_termination_factor and TU.
pen is the penalty for new fragments in the dynamic programming, pen_out is
the outlier penalty.}
\usage{
fragment_TI(probe, cores = 1, pen, pen_out)
}
\arguments{
\item{probe}{data frame: the probe based data frame.}

\item{cores}{cores: integer: the number of assigned cores for the task.}

\item{pen}{numeric: an internal parameter for the dynamic programming.
Higher values result in fewer fragments. Default is the auto generated value.}

\item{pen_out}{numeric: an internal parameter for the dynamic programming.
Higher values result in fewer allowed outliers. Default is the auto generated
value.}
}
\value{
the probe data frame with the columns regarding the TI:
TI_termination_fragment and TI_mean_termination_fragment:
\describe{
\item{ID:}{The bin/probe specific ID}
\item{position:}{The bin/probe specific position}
\item{strand:}{The bin/probe specific strand}
\item{flag:}{Information on which fitting model is applied}
\item{TI_termination_factor:}{The termination factor of the bin/probe}
\item{TU:}{The overarching transcription unit}
\item{TI_termination_fragment:}{The TI fragment the bin belongs to}
\item{TI_mean_termination_factor:}{The mean termination factor of the
respective TI fragment}
}
}
\description{
fragment_TI: performs the TI fragmentation.
fragment_TI makes TI_fragments based on TUs and assigns all gathered
information to the probe based data frame.
The columns "TI_termination_fragment" and the TI_mean_termination_factor
are added.
The function used is:
.score_fun_ave.
The input is the probe, a dataframe with ID, TI_termination_factor and TU.
pen is the penalty for new fragments in the dynamic programming, pen_out is
the outlier penalty.
}
\examples{
data(fragmentation_minimal)
data(penalties_minimal)
fragment_TI(
  probe = fragmentation_minimal, cores = 2,
  pen = penalties_minimal["TI_penalty"],
  pen_out = penalties_minimal["TI_outlier_penalty"]
)

}
