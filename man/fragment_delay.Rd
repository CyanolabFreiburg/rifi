% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fragment_delay.r
\name{fragment_delay}
\alias{fragment_delay}
\title{fragment_delay makes delay_fragments based on position_segments and assigns
all gathered information to the SummarizedExperiment object.
The columns "delay_fragment", "velocity_fragment", "intercept" and "slope"
are added.
fragment_delay makes delay_fragments, assigns slopes, which are 1/velocity
at the same time, and intercepts for the TU calculation.
The function used is: score_fun_linear
the input is the SummarizedExperiment object.
pen is the penalty for new fragments in the dynamic programming, pen_out is
the outlier penalty.}
\usage{
fragment_delay(inp, cores = 1, pen, pen_out)
}
\arguments{
\item{inp}{SummarizedExperiment: the input data frame with correct format.}

\item{cores}{cores: integer: the number of assigned cores for the task.}

\item{pen}{numeric: an internal parameter for the dynamic programming.
Higher values result in fewer fragments. Default is the auto generated value.}

\item{pen_out}{numeric: an internal parameter for the dynamic programming.
Higher values result in fewer allowed outliers. Default is the auto generated
value.}
}
\value{
the SummarizedExperiment object: with delay_fragment,
velocity_fragment, intercept and slope added to the rowRanges.
}
\description{
fragment_delay makes delay_fragments based on position_segments and assigns
all gathered information to the SummarizedExperiment object.
The columns "delay_fragment", "velocity_fragment", "intercept" and "slope"
are added.
fragment_delay makes delay_fragments, assigns slopes, which are 1/velocity
at the same time, and intercepts for the TU calculation.
The function used is: score_fun_linear
the input is the SummarizedExperiment object.
pen is the penalty for new fragments in the dynamic programming, pen_out is
the outlier penalty.
}
\examples{
data(fragmentation_minimal)
fragment_delay(inp = fragmentation_minimal, cores = 2, pen = 2, pen_out = 1)

}
